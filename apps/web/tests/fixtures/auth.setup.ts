import { test as setup, expect } from '@playwright/test';

const authFile = 'playwright/.auth/user.json';

setup('authenticate', async ({ page }) => {
  // Perform authentication steps
  await page.goto('/auth/sign-in');
  
  // Use environment variables for credentials
  // In test environment, E2E_ADMIN_PASSWORD should be 'autopwn-test-password'
  // which matches the password generated by the API when NODE_ENV=test
  const email = process.env.E2E_ADMIN_EMAIL || 'admin@autopwn.local';
  const password = process.env.E2E_ADMIN_PASSWORD || 'autopwn-test-password';
  
  await page.fill('input[name="email"]', email);
  await page.fill('input[name="password"]', password);
  await page.click('button[type="submit"]');
  
  // Wait until the page receives the cookies.
  // Wait for the final URL to ensure that the cookies are actually set.
  await page.waitForURL('/', { timeout: 15000 });
  
  // Alternatively, you can wait until the page reaches a state where all cookies are set.
  await expect(page.locator('h1, text=AutoPWN')).toBeVisible({ timeout: 5000 });

  // Save the storage state to reuse in other tests
  await page.context().storageState({ path: authFile });
});