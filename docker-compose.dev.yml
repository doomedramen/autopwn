# ðŸ”§ AutoPWN Development Docker Compose
# This configuration builds from source for development

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: autopwn-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-autopwn}
      POSTGRES_USER: ${POSTGRES_USER:-autopwn}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-autopwn} -d ${POSTGRES_DB:-autopwn}',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - autopwn-dev-network

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpu
      args:
        - NODE_ENV=development
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    image: autopwn:development
    container_name: autopwn-app-dev
    environment:
      # Development environment
      NODE_ENV: development

      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-autopwn}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-autopwn}

      # Application URLs
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}

      # Authentication (REQUIRED for dev)
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}

      # Development logging
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}

      # Password Policy
      MIN_PASSWORD_LENGTH: ${MIN_PASSWORD_LENGTH:-8}
      REQUIRE_PASSWORD_UPPERCASE: ${REQUIRE_PASSWORD_UPPERCASE:-true}
      REQUIRE_PASSWORD_LOWERCASE: ${REQUIRE_PASSWORD_LOWERCASE:-true}
      REQUIRE_PASSWORD_NUMBERS: ${REQUIRE_PASSWORD_NUMBERS:-true}
      REQUIRE_PASSWORD_SYMBOLS: ${REQUIRE_PASSWORD_SYMBOLS:-true}

      # Security
      ACCOUNT_LOCKOUT_ATTEMPTS: ${ACCOUNT_LOCKOUT_ATTEMPTS:-5}
      ACCOUNT_LOCKOUT_DURATION: ${ACCOUNT_LOCKOUT_DURATION:-15}
      SESSION_TIMEOUT: ${SESSION_TIMEOUT:-24}
    volumes:
      # Mount source code for development
      - .:/app
      - /app/node_modules
      - uploads_dev_data:/app/uploads
      - jobs_dev_data:/app/jobs
    ports:
      - '${APP_PORT:-3000}:3000'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/auth/status']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - autopwn-dev-network

volumes:
  postgres_dev_data:
    driver: local
  uploads_dev_data:
    driver: local
  jobs_dev_data:
    driver: local

networks:
  autopwn-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
