name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: autopwn_password
          POSTGRES_USER: autopwn
          POSTGRES_DB: autopwn_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: latest

    - name: Install dependencies
      run: |
        pnpm install --frozen-lockfile

    - name: Install Playwright browsers
      run: |
        cd apps/web
        pnpm exec playwright install --with-deps

    - name: Build shared package
      run: |
        cd packages/shared
        pnpm run build

    - name: Build web application
      run: |
        cd apps/web
        pnpm run build

    - name: Setup test database
      run: |
        cd apps/web
        # Create test database schema
        # This would depend on your actual database setup
        echo "Setting up test database..."

    - name: Run E2E tests
      run: |
        cd apps/web
        CI=true pnpm run test:e2e:ci
      env:
        DATABASE_URL: postgresql://autopwn:autopwn_password@localhost:5432/autopwn_test
        NEXT_PUBLIC_API_URL: http://localhost:3001
        BETTER_AUTH_URL: http://localhost:3001
        NODE_ENV: test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: apps/web/playwright-report/
        retention-days: 30

    - name: Upload test screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots
        path: apps/web/test-results/
        retention-days: 30

    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos
        path: apps/web/test-results/
        retention-days: 30

  # Docker-based E2E tests
  e2e-docker:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'run-docker-tests')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test image
      run: |
        docker-compose build web-test

    - name: Run E2E tests in Docker
      run: |
        docker-compose --profile test up --build --abort-on-container-exit --exit-code-from web-test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: docker-playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Cleanup
      if: always()
      run: |
        docker-compose --profile test down --volumes --remove-orphans