name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: autopwn_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run backend tests
        working-directory: apps/backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test:test@localhost:5432/autopwn_test
          BETTER_AUTH_SECRET: test-secret-key-minimum-32-chars-long-for-testing-only
          BETTER_AUTH_URL: http://localhost:3001
        run: pnpm test

      - name: Run backend coverage
        working-directory: apps/backend
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://test:test@localhost:5432/autopwn_test
          BETTER_AUTH_SECRET: test-secret-key-minimum-32-chars-long-for-testing-only
          BETTER_AUTH_URL: http://localhost:3001
        run: pnpm test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./apps/backend/coverage/coverage-final.json
          flags: backend
          name: backend-coverage

  test-frontend:
    name: Frontend E2E Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: autopwn
          POSTGRES_PASSWORD: autopwn_password
          POSTGRES_DB: autopwn
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: apps/web
        run: npx playwright install --with-deps chromium

      - name: Type check frontend
        working-directory: apps/web
        run: pnpm run type-check

      - name: Run E2E tests
        working-directory: apps/web
        env:
          DATABASE_URL: postgresql://autopwn:autopwn_password@localhost:5432/autopwn
          BETTER_AUTH_SECRET: test-secret-key-minimum-32-chars-long-for-ci-testing-only
          BETTER_AUTH_URL: http://localhost:3001
          NEXT_PUBLIC_API_URL: http://localhost:3001
        run: pnpm run test:e2e:ci || true

      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  type-check:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check all packages
        run: pnpm run type-check

  build:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          BETTER_AUTH_SECRET: build-time-secret-minimum-32-chars-long-for-build-only
          BETTER_AUTH_URL: http://localhost:3001
          NEXT_PUBLIC_API_URL: http://localhost:3001
        run: pnpm run build

      - name: Check build artifacts
        run: |
          ls -la apps/backend/dist
          ls -la apps/web/.next
