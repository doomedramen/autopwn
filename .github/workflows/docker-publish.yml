name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: docker.io
  IMAGE_NAME_WORKER: doomedra men/autopwn-worker
  IMAGE_NAME_WEB: doomedramen/autopwn-web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [worker, web]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ matrix.service == 'worker' && env.IMAGE_NAME_WORKER || env.IMAGE_NAME_WEB }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./packages/${{ matrix.service }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Docker Hub Description
        if: github.event_name == 'release' && matrix.service == 'worker'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.IMAGE_NAME_WORKER }}
          short-description: "AutoPWN Worker - Automated WPA/WPA2 handshake cracker"
          readme-filepath: ./README.md

  build-compose-images:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'release'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update docker-compose.yml with version
        run: |
          sed -i "s|image: autopwn-worker|image: doomedramen/autopwn-worker:${{ steps.version.outputs.VERSION }}|g" docker-compose.yml
          sed -i "s|image: autopwn-web|image: doomedramen/autopwn-web:${{ steps.version.outputs.VERSION }}|g" docker-compose.yml

      - name: Create release artifact
        run: |
          tar -czf autopwn-docker-compose-${{ steps.version.outputs.VERSION }}.tar.gz \
            docker-compose.yml \
            docker-compose.nvidia.yml \
            docker-compose.amd.yml \
            .env.example

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: autopwn-docker-compose-${{ steps.version.outputs.VERSION }}.tar.gz
